# Use root/example as user/password credentials
version: '3.1'

services:
    nginx:
        image: nginx:1.15-alpine
        restart: unless-stopped
        volumes:
          - ./data/nginx:/etc/nginx/conf.d
          - ./data/certbot/conf:/etc/letsencrypt
          - ./data/certbot/www:/var/www/certbot
        ports:
          - 80:80
          - 443:443
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

    certbot:
        image: certbot/certbot
        restart: unless-stopped
        volumes:
          - ./data/certbot/conf:/etc/letsencrypt
          - ./data/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"  

    client:
        build:
          context: ./client
        ports:
          - 3000:3000
        container_name: client
        restart: always
        volumes:
           - ./client:/usr/src/app
           - /usr/src/app/node_modules

    server:
        build:
            context: ./server
        ports:
            - 5000:5000
        restart: always
        container_name: server
        volumes:
            - ./server:/usr/src/app
            - /usr/src/app/node_modules
            - ./data/certbot/conf:/etc/letsencrypt
        
    db:
        image: mysql
        restart: always
        container_name: db
        ports:
          - 3306:3306
        environment:
            MYSQL_USER: "${MYSQL_ROOT_USER}"
            MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
            MYSQL_DATABASE: "${MYSQL_DATABASE}"
        volumes:
            - db-config:/etc/mysql
            - db-data:/var/lib/mysql
            - ./db/backup/files/:/data_backup/data
 
    adminer:
        image: adminer
        restart: always
        ports:
          - 8080:8080

volumes: 
    db-config:
    db-data: